from mx.Misc.LazyModule import LazyModule
import logging

import qps, qps.qSite

# auto-exec code

siteRoot = '%(site_root)s'
loglevel = logging.INFO

try:
    import _apache
except ImportError:
    qps.configLogger(level=loglevel)
else:
    handler = logging.StreamHandler(
        open(siteRoot+'/logs/modpython.log', 'a')
        )
    qps.configLogger(level=loglevel, handler=handler)

# site

class Site(qps.qSite.Site):
    # fields configuration
    
    from Cfg.fields import fields
    from Cfg.streams import streamDescriptions, virtualStreamRules
    
    # site configuration

    title = u"%(title)s"
    host = 'localhost'

    dbCharset = 'utf-8'
    templateCharset = 'utf-8'
    clientCharset = 'utf-8'

    dbParams = {
        'db': 'test',
        'user': 'test',
        'passwd': 'test'
        }

    # templates configuration

    makeRoot = '%(make_dir)s'
    templateDirs = ['%(make_templates_dir)s']
    siteMakers = ['Maker', 'StreamsMaker']

    globalNamespace = qps.qSite.Site.globalNamespace
    globalNamespace.update(
        {'Cook': LazyModule('Cook', locals(), globals())}
        )

    def getMakerClass(self, makerClassName):
        '''Import makerClass from Make module if short name (without dots)
        is gived'''
        
        if '.' not in makerClassName:
            makerClassName = "Make.%%s" %% makerClassName
        makerClass = qps.qSite.Site.getMakerClass(self, makerClassName)
        return makerClass

    getWriterClass = getMakerClass
